- [fix] for media drug and drop put text label bottom-right.

next,
  if (alignment_index != GTK_INVALID_LIST_POSITION && alignment_index < 6) {
    new_alignment = alignment_values[alignment_index];
  }

  // Update visual element immediately
  switch (data->element->type) {
  case ELEMENT_NOTE: {
    Note* el = (Note*)data->element;
    update_font_and_color(&el->font_description, new_font_desc, &el->text_r, &el->text_g, &el->text_b, &el->text_a, &new_color);
    if (alignment_index != GTK_INVALID_LIST_POSITION && alignment_index < 6) {
      g_free(el->alignment);
      el->alignment = g_strdup(new_alignment);
    }
    break;
  }


why we need those invalid_list_position checks... can we just make sure it's never invalid from layer above?

next, can we refactor duplication:
static PangoAlignment get_pango_alignment(const char *alignment) {
  if (!alignment) return PANGO_ALIGN_LEFT;
  if (g_str_has_suffix(alignment, "left")) return PANGO_ALIGN_LEFT;
  if (g_str_has_suffix(alignment, "right")) return PANGO_ALIGN_RIGHT;
  return PANGO_ALIGN_CENTER;
}

typedef enum {
  VALIGN_TOP,
  VALIGN_CENTER,
  VALIGN_BOTTOM
} VerticalAlign;

static VerticalAlign get_vertical_alignment(const char *alignment) {
  if (!alignment) return VALIGN_TOP;
  if (g_str_has_prefix(alignment, "top-")) return VALIGN_TOP;
  if (g_str_has_prefix(alignment, "bottom-")) return VALIGN_BOTTOM;
  return VALIGN_CENTER;
}
put it to elements.h I guess and re-use accross all element types

next, for pure text, maybe disable text alignment option
- [improvement] allow text alignment as optional property in DSL for serialization and deserialization

- [improvement] add curve arrows with control points
- [new feature] save images/videos to file via context menu
- [fix] support mp4 files without audio channel
- [idea to explore] collaborative editing
- [idea to explore] different type of spaces (e.g. task board space, music player space)
